name: Linux Builds

on: #[push, pull_request]
  push:
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'data/**'
      - 'scripts/**'
      - '.github/workflows/windows.yml'
      - '.lgtm.yml'

jobs:
  linux-build:
    name: Compilation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [clang++-12, g++-11]
        type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          # add a repository to get access to gcc v11
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update && sudo apt install -y ninja-build ccache lcov gcc-11 g++-11 clang-12

      - name: Configure
        run: cmake -GNinja -H. -B../Build -DNDR_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DNDR_CODE_COVERAGE=ON

      - name: Build
        run: cmake --build ../Build

      - name: Test
        run: cd ../Build && ctest -j2 -V

      - name: Generate coverage report
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++-11' }}
        run: |
          cd ../Build
          #FIXME: gcov binary should be generic
          lcov --directory . --capture --gcov-tool /usr/bin/gcov-11 --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' '*/external/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage report to codecov
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++-11' }}
        uses: codecov/codecov-action@v1
        with:
          file: ../Build/coverage.info

      - name: Upload coverage report to codacy
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++-11' }}
        # uses: codacy/codacy-coverage-reporter-action@master
        # with:
        #   project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        #   coverage-reports: ./Build/coverage.info
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ../Build/coverage.info
