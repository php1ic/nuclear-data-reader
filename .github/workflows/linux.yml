name: Linux Builds

on: #[push, pull_request]
  push:
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'data/**'
      - 'scripts/**'
      - '.github/workflows/windows.yml'
      - '.lgtm.yml'

jobs:
  linux-build:
    name: Compilation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [clang++-15, g++]
        type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set build directory
        id: build_dir
        run: echo "DIR=../Build" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y cmake ninja-build ccache lcov gcc g++ clang-15

      - name: Configure
        run: cmake -GNinja -H. -B${{ steps.build_dir.outputs.DIR }} -DNDR_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DNDR_CODE_COVERAGE=ON

      - name: Build
        run: cmake --build ${{ steps.build_dir.outputs.DIR }}

      - name: Test
        run: ctest -j2 -V --test-dir ${{ steps.build_dir.outputs.DIR }}

      - name: Generate coverage report
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++' }}
        run: |
          cd ${{ steps.build_dir.outputs.DIR }}
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' '*/external/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage report to codecov
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++' }}
        uses: codecov/codecov-action@v4
        with:
          file: ${{ steps.build_dir.outputs.DIR }}/coverage.info

      - name: Upload coverage report to codacy
        if: ${{ matrix.type == 'Debug' && matrix.compiler == 'g++' }}
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ${{ steps.build_dir.outputs.DIR }}/coverage.info
